# This workflow builds and tests svZeroDSolver. The Python version is tested on
# ubuntu and the C++ version is built and tested on different versions of
# ubuntu and macOS.
name: Build and test
on: [push, pull_request]
jobs:
  cpp:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-18.04, ubuntu-20.04, ubuntu-22.04, macos-11, macos-12]
      fail-fast: false
    steps:
      - uses: actions/checkout@v2
      - name: Build svZeroDSolver
        run: |
          mkdir Release
          cd Release
          cmake -DCMAKE_BUILD_TYPE=Release ..
          cmake --build .
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: svzerodsolver-${{matrix.os}}
          path: Release/svzerodsolver
          if-no-files-found: error
      - name: Install test dependencies
        run: |
          conda create -n zerod python=3.9
          conda run -n zerod pip install pytest pytest-cov pytest-mock
          conda run -n zerod pip install -e .
      - name: Test the build
        run: |
          conda run -n zerod pytest tests/test_integration_cpp.py
      - name: Profile svZeroDSolver
        if: startsWith(matrix.os,'ubuntu')
        run: |
          cd Release
          sudo apt-get update && sudo apt-get install libgoogle-perftools-dev
          LD_PRELOAD=/usr/lib/x86_64-linux-gnu/libprofiler.so CPUPROFILE=main.prof CPUPROFILE_FREQUENCY=100000 ./svzerodsolver ../tests/cases/0183_1002_0d.in ./tmp.csv
          google-pprof --pdf ./svzerodsolver main.prof > profiling_report.pdf
      - name: Profile svZeroDSolver
        if: startsWith(matrix.os,'macos')
        run: |
          cd Release
          brew install gperftools
          sudo DYLD_INSERT_LIBRARIES=/usr/local/lib/libprofiler.dylib CPUPROFILE=main.prof CPUPROFILE_FREQUENCY=100000 ./svzerodsolver ../tests/cases/0183_1002_0d.in ./tmp.csv
          pprof --pdf ./svzerodsolver main.prof > profiling_report.pdf
      - name: Upload profiling report
        uses: actions/upload-artifact@v3
        with:
          name: profiling-report-${{matrix.os}}
          path: ./Release/profiling_report.pdf
      - name: Upload release asset
        if: startsWith(github.ref, 'refs/tags/')
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: Release/svzerodsolver
          asset_name: svzerodsolver-${{github.ref_name}}-${{matrix.os}}
          tag: ${{ github.ref }}
  python:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up environment
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: Install dependencies
        run: |
          conda create -n zerod python=3.9
          conda run -n zerod pip install pytest pytest-cov pytest-mock
          conda run -n zerod pip install -e .
      - name: Run pytest
        run: |
          conda run -n zerod pytest tests/test_integration.py
      - name: Save coverage report
        uses: actions/upload-artifact@v3
        with:
          name: coverage_report
          path: htmlcov
  